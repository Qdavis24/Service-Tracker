"""add relationship between users and services

Revision ID: f74b91d2dce1
Revises: 7150e14a61ad
Create Date: 2024-08-08 20:58:45.917153

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f74b91d2dce1'
down_revision = '7150e14a61ad'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_services')
    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.alter_column('picture',
               existing_type=sa.BLOB(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.create_unique_constraint(batch_op.f('uq_services_picture'), ['picture'])
        batch_op.create_foreign_key(batch_op.f('fk_services_owner_id_users'), 'users', ['owner_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_services_picture_pictures'), 'pictures', ['picture'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_users_email'), ['email'])

    with op.batch_alter_table('vehicles', schema=None) as batch_op:
        batch_op.alter_column('picture',
               existing_type=sa.BLOB(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.create_unique_constraint(batch_op.f('uq_vehicles_picture'), ['picture'])
        batch_op.create_foreign_key(batch_op.f('fk_vehicles_picture_pictures'), 'pictures', ['picture'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vehicles', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_vehicles_picture_pictures'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('uq_vehicles_picture'), type_='unique')
        batch_op.alter_column('picture',
               existing_type=sa.Integer(),
               type_=sa.BLOB(),
               existing_nullable=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_users_email'), type_='unique')

    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_services_picture_pictures'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_services_owner_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('uq_services_picture'), type_='unique')
        batch_op.alter_column('picture',
               existing_type=sa.Integer(),
               type_=sa.BLOB(),
               existing_nullable=True)
        batch_op.drop_column('owner_id')

    op.create_table('_alembic_tmp_services',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('vehicle_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=False),
    sa.Column('service', sa.VARCHAR(), nullable=False),
    sa.Column('story', sa.VARCHAR(), nullable=False),
    sa.Column('picture', sa.INTEGER(), nullable=True),
    sa.Column('mileage', sa.INTEGER(), nullable=True),
    sa.Column('owner_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='owners'),
    sa.ForeignKeyConstraint(['picture'], ['pictures.id'], name='pictures'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('picture', name='picture')
    )
    # ### end Alembic commands ###
